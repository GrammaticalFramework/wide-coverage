---- edited by AR till way_N and some structural words below

concrete TopDictionaryGer of TopDictionary = CatGer ** 
  open 
    ParadigmsGer, (S = SyntaxGer), (L = LexiconGer),
    TopDictGer, (R = ResGer), (M = MorphoGer), (I = IrregGer), Prelude in {

flags
  coding=utf8 ;

oper mkReflV : Str -> V = \s -> reflV (mkV s) accusative ;
oper junkV : V -> Str -> V = \_,_ -> variants {} ; ---- to match Wiktionary-extracted non-verbs

lin look_V2 = mkV2 (prefixV "an" (mkV "schauen")) ;
lin look_V = mkV "schauen" ;
link like_Prep = mkPrep "wie" nominative ; -- comment=subcat; case depends on clause
lin down_Adv = mkAdv "hinunter" ;
lin tell_V3 = mkV3 (fixprefixV "er" (mkV "zählen")) ; ---- delete, sense is split!
lin tell_1_V3 = mkV3 (fixprefixV "er" (mkV "zählen")) ;
lin tell_2_V3 = mkV "unterscheiden" "unterscheidet" "unterschied" "unterschiede" "unterschieden" ;
lin work_V = mkV "arbeiten" ; ---- delete, sense is split!
lin part_N = reg2N "Rolle" "Rollen" feminine ; -- comment=split: Teil (teil_N)
lin leave_V = seinV (mkV "ab" I.fahren_V) | I.gehen_V; -- comment=split: train leaving = abfahren; human leaving = gehen
lin great_A = mkA "großartig" | mk3A "groß" "größer" "größte" ; ---- split: great day (großartig) / great king (groß)
lin seem_VV = mkVV I.scheinen_V ;
lin seem_VS = mkVS I.scheinen_V ;
lin need_VV = mkVV I.müssen_V ;
lin need_V2V = mkVV (mkV "brauchen") ; -- comment=no easy translation to Ger; e.g. I need you to love me - ich brauche, dass du mich liebst
lin need_V = mkV "brauchen" ; ---- delete 
lin feel_VS = mkVS irregV "denken" "denkt" "dachte" "dächte" "gedacht" ;
lin feel_VA = reflV (mkV "fühlen") accusative ;
lin feel_V2 = mkV2 "fühlen" ;
lin feel_V = mkV "fühlen" ;
lin may_1_VV = mkVV I.können_V ; -- comment= no direct translation; e.g. I MAY be able to help you = ich kann dir VIELLEICHT helfen
lin number_3_N = mkN "Numerus" "Numerus" "Numerus" "Numerus" "Numeri" "Numeri" masculine ; 
lin number_2_N = mkN "Anzahl" "Anzahlen" feminine ;  
lin number_1_N = mkN "Zahl" "Zahlen" feminine ;
lin however_Adv = mkAdv "wie auch immer" | "jedoch"
lin area_N = reg2N "Gebiet" "Gebiete" neuter ; --- delete; sense is split
lin area_6_N = mkN "Fläche" feminine ;
lin area_5_N = mkN "Bereich"
lin area_4_N = mkN "Bereich"
lin area_3_N = mkN "Bereich"
lin area_2_N = mkN "Bereich"
lin area_1_N = mkN "Gebiet" "Gebiet" "Gebiet" "Gebiets" "Gebiete" "Gebieten" neuter | mkN "Gegend" feminine
lin show_V2 = dirV2 (regV "zeigen"); -- comment=subcat; V3 in German; I can show you = ich kann ES dir zeigen
lin course_N = reg2N "Bahn" "Bahnen" feminine | mkN "Kurs" ; --- split: course of the moon = Bahn; language course = Kurs
lin company_2_N = reg2N "Gesellschaft" "Gesellschaften" feminine;
lin under_Prep = mkPrep "unter" dative; | mkPrep "unter" accusative ; --- split: ich stehe unter der Brücke (dat) ; ich gehe unter die Brücke (acc)
lin most_Adv = mkAdv "meistens" ; ---- cat am meisten?
lin service_N = reg2N "Dienst" "Dienste" masculine | mkN "Dienstleistung" ;
lin try_VV = mkVV (fixprefixV "ver" (mkV "suchen")) ; 
lin try_V2V = mkV2V fixprefixV "ver" (mkV "suchen")) ; 
lin try_V2 = mkV2 (mkV "kosten") ;
lin try_V = fixprefixV "ver" (mkV "suchen") ; --cat = V2?: I tried = ich habe ES versucht. 
lin call_V3 = mkV3 "I.nennen_V" ;
lin call_V2 = mkV2 (prefixV "an" I.rufen_V) | mkV2 I.rufen_V ; --- split: call on the phone; call out a name
lin call_V = prefixV "an" I.rufen_V ;
lin party_N = mkN "PartylÃ¶we" masculine | mkN "Partymaus" feminine | mkN "Tanzmaus" feminine | mkN "Partyjunge" masculine | mkN "PartymÃ¤dchen" neuter | mkN "Partygirl" neuter | mkN "PartygÃ¤nger" masculine | mkN "PartygÃ¤ngerin" feminine ; -- delete! sense is split
lin party_2_N = mkN "Partei" "Partei" "Partei" "Partei" "Parteien" "Parteien" feminine ; 
lin party_1_N = mkN "Fest" "Fest" "Fest" "Festes" "Feste" "Festen" neuter | reg2N "Feier" "Feiern" feminine ;
lin high_A = mkA "hoch" "hoh" "höher" "höchste";
lin in_Adv = mkAdv "drinnen" ; --- delete: sense is split
lin in_1_Adv = mkAdv "drinnen" ;
lin in_2_Adv = mkAdv "hinein" ;
lin place_N = mkN "Ort" | mkN "Platz" "Platz" "Platz" "Platzes" "Plätze" "Plätzen" masculine ;
lin away_Adv = mkAdv "weg" ;
lin away_2_Adv = mkAdv "weg" ;
lin away_1_Adv = mkAdv "weg" ;
lin while_Subj = ss "während" ;
lin keep_VV = mkVV (fixprefixV "wieder" (mkV "holen")) ; -- cat: to KEEP doing something = ich mache etwas STÄNDIG
lin keep_V2A = mkV2A I.halten_V ;
lin keep_V2 = mkV2 (irregV "behalten" "behält" "behielt" "behielte" "behalten") ;
lin keep_V = mkV2A I.halten_V ; --- delete: false extraction
lin point_N = mkN "Komma" masculine ; -- delete: sense = split
lin point_2_N = mkN "Punkt" ; 
lin point_1_N = mkN "Punkt" ; 
lin different_A = mkA "verschieden" ;
lin provide_V2 = mkV2 (prefixV "bereit" (mkV "stellen")) ;
lin provide_V = fixprefixV "ver" (mkV "sorgen") ;
lin week_N = mkN "Woche" ;
lin hold_VS = mkVS (mkV "meinen") ;
lin hold_V = L.hold_V2 ; --- delete: false extraction
lin large_A = mk3A "groß" "größer" "größte" | mkA "weit" ; --- split: large dog (groß); large area (weit)
lin member_N = mkN "Mitglied" "Mitglied" "Mitglied" "Mitglieds" "Mitglieder" "Mitglieder" neuter ; 
lin off_Adv = mkAdv "weg" | mkAdv "davon" ; 
lin always_Adv = S.always_Adv ;
lin follow_VS = mkVS (mkV "folgern") ;  
lin follow_V2 = mkV2 (mkV "folgen") ; 
lin follow_V = mkV "folgen" ;
lin turn_VA = mkVA I.werden_V ; 
lin turn_V2 = mkV2 L.turn_V ; 
lin end_N = mkN "Ende" ; -- delete: sense is split
lin end_2_N = mkN "Seite" ; 
lin end_1_N = mkN "Ende" "Ende" "Ende" "Endes" "Enden" "Enden" neuter;
lin within_Prep = mkPrep "innerhalb" genitive ; 
lin local_A = mkA "lokal" | mkA "örtlich" ; 
lin where_Subj = ss "wo" ; 
lin bring_V3 = mkV3 I.bringen_V ;
lin bring_V2 = mkV2 I.bringen_V ;
lin begin_V2 = mkV2 (prefixV "an" I.fangen_V) | mkV2 I.beginnen_V ;
lin begin_V = prefixV "an" I.fangen_V | I.beginnen_V ;
lin example_N = mkN "Beispiel" "Beispiele" neuter ;
lin family_N = mkN "Familie" ;
lin rather_Adv = mkAdv "eher" | mkAdv "lieber" ;
lin fact_N = mkN "Tatsache" ;
lin like_VV = mkVV I.mögen_V ; -- cat: ideal German translation would be with adv, e.g. I LIKE running = ich laufe GERNE
lin like_VS = mkVS (irregV "gefallen" "gefällt" "gefiel" "gefiele" "gefallen") ; -- cat: ideal translation would be with dummy expletive, e.g. I like that... = es gefällt mir, dass ...
lin like_V2 = L.like_V2 ;
lin social_A = mkA "sozial" ; 
lin write_VS = mkVS (irregV "schreiben" "schreibt" "schrieb" "schriebe" "geschrieben") ;
lin write_V2 = L.write_V2 ;
lin write_V = irregV "schreiben" "schreibt" "schrieb" "schriebe" "geschrieben"
lin state_N = zustand_N ; -- delete: senses are split
lin state_2_N = mkN "Stand" "Stand" "Stand" "Standes" "Stände" "Stände" | mkN "Zustand" "Zustand" "Zustand" "Zustandes" "Zustände" "Zustände";
lin state_1_N = mkN "Staat" ;
lin percent_N = mkN "Prozent" ;
lin start_V2 = mkV2 I.beginnen_V ; 
lin start_V = I.beginnen_V ; 
lin run_V2 = mkV2 (mkV "leiten") | mkV2 (prefixV "aus" (mkV "führen")) ; ---- split: run a company, run a programme, maybe add: run elections? 
lin run_V = L.run_V ;
lin long_A = L.long_A ;
lin right_Adv = mkAdv "ganz" ; --- delete: senses are split
lin right_2_Adv = mkAdv "rechts" ; 
lin right_1_Adv = mkAdv "richtig" ;
lin set_V2 = mkV2 (mkV "stellen") | mkV2 (prefixV "fest" (mkV "setzen")) | mkV2 (mkV "decken") ; ---- split: set the clock | set a date| set the table
lin help_V2V = mkV2V I.helfen_V ; 
lin help_V2 = mkV2 I.helfen_V ; 
lin help_V = I.helfen_V ; 
lin home_N = mkN "Zuhause" "Zuhause" "Zuhause" "Zuhauses" "Zuhause" "Zuhausen" neuter ;   
lin month_N = mkN "Monat" "Monat" "Monat" "Monats" "Monate" "Monaten" masculine ; 
lin side_N = mkN "Seite" ; 
lin information_N = mkN "Information" ;  
lin question_N = L.question_N ;
lin business_N = mkN "Geschäft" "Geschäfte" neuter ; 
lin play_V2 = L.play_V2 ; --- delete: senses are split
lin play_V = L.play_V ; --- delete: senses are split
lin play_3_V2 = L.play_V2 ;
lin play_3_V = L.play_V ;
lin play_2_V2 = L.play_V2 ;
lin play_2_V = L.play_V ;
lin play_1_V2 = L.play_V2 ;
lin play_1_V = L.play_V ;
lin power_N = mkN "Strom" "Ströme" masculine | mkN "Kraft" "Kräfte" feminine | mkN "Macht" "Mächte" feminine ; --- split: power cut | the exercises take a lot of power | the person in power 
lin money_N = mkN "Geld" "Geld" "Geld" "Geldes" "Gelder" "Geldern" neuter ; 
lin change_N = mkN "Veränderung" feminine | mkN "Wechselgeld" "Wechselgeld" "Wechselgeld" "Wechselgeldes" "Wechselgelder" "Wechselgeldern" neuter; --- split
lin move_V2 = mkV2 (no_geV (mkV "bewegen")) ; 
lin move_V = ausziehen_4_V ; --- delete: senses are split
lin move_2_V = prefixV "um" I.ziehen_V ;
lin move_1_V = no_geV (mkV "bewegen") ;
lin interest_N = interesse_N ;  --- delete: senses are split
lin interest_4_N = variants{} ; -- ? not in disambiguation
lin interest_2_N = mkN "Zins" "Zins" "Zins" "Zinses" "Zinsen" "Zinsen" masculine ;
lin interest_1_N = mkN "Interesse" "Interesse" "Interesse" "Interesses" "Interessen" "Interessen" neuter ;
lin order_N = mkN "Befehl" | mkN "Reihenfolge" | mkN "Ordnung" ; --- split: she gave an order | read it in this order | everything is in order
lin often_Adv = mkAdv "häufig" | mkAdv "oft" ;
lin development_N = mkN "Entwicklung" ;  
lin pay_V3 = mkV3 (prefixV "auf" (mkV "passen")) ; --- delete: false extraction  
lin pay_V2V = mkV2V (no_geV (mkV "bezahlen")) ;     
lin pay_V2 = mkV2 (no_geV (mkV "bezahlen")) |  ;     
lin pay_V = mkV "zahlen" ;
lin hear_V2 = L.hear_V2 ;
lin room_N = mkN "Platz" "Platz" "Platz" "Platzes" "Plätze" "Plätzen" ; --- delete: senses are split
lin room_1_N = mkN "Raum" "Raum" "Raum" "Raumes" "Räume" "Räumen" masculine | mkN "Zimmer" "Zimmer" neuter ;
lin room_2_N = mkN "Platz" "Platz" "Platz" "Platzes" "Plätze" "Plätzen" ;
lin whether_Subj = ss "ob" ;
lin form_N = mkN "Form" feminine | mkN "Formular" "Formular" "Formular" "Formulars" "Formulare" "Formularen" neuter ; ---- split: form as shape | you have to fill out the form
lin other_N = mkN "Andere" ; 
lin yet_Adv = noch_mal_Adv ; ---- delete: sense is split
lin yet_2_Adv = mkAdv "dennoch" ;
lin yet_1_Adv = mkAdv "noch" ;
lin meet_V2 = mkV2 I.treffen_V | mkV2 (prefixV "gerecht" I.werden_V) | mkV2 (prefixV "ein" I.halten_V) ; ---- split: meet a friend | meet expectations | meet a deadline
lin meet_V = I.treffen_V ; --- cat: never without N in German: e.g. let's meet = lass uns treffen
lin level_N = stufe_N ; --- delete: sense is split
lin level_2_N = mkN "Stock" "Stock" "Stock" "Stocks" "Stöcke" "Stöcken" masculine | mkN "Spiegel" ; split further: level of building / water level
lin level_1_N = mkN "Niveau" "Niveaus" neuter ; 
lin until_Subj = ss "bis" ; 
lin though_Subj = S.although_Subj ;
lin policy_N = mkN "Verfahrensweise" | mkN "Police" ; --- split: what is your policy on this? / insurance policy
lin include_V2 = mkV2 (prefixV "ein" I.schließen_V) | mkV2 (mkV "inkludieren") ;  
lin include_V = mkV "einfügen" | mkV "inkludieren" ; --- delete: false extraction 
lin line_N = mkN "Linie" | mkN "Leine" ; can you walk on a line | the dog is on a line 
lin allow_V2V = mkV2V I.lassen_V | mkV2V (no_geV (mkV "erlauben")) ; --- note: different case: I let her go = ich lasse sie gehen / ich erlaube ihr zu gehen
lin allow_V2 =  mkV2 (no_geV (mkV "erlauben")) ; 
lin need_N = mkN "Not" "Nöte" feminine | mkN "Bedarf" | mkN "Bedürfnis" "Bedürfnis" "Bedürfnis" "Bedürfnisses" "Bedürfnisse" "Bedürfnissen" neuter ; --- split: women in need (Not); there is a need for ... (Bedarf; Bedürfnis - not full synonyms but very close)
lin effect_N = mkN "Effekt" | mkN "Auswirkung" | mkN "Wirkung" ;
lin use_N = mkN "Benutzung" | mkN "Anwendung" | mkN "Gebrauch" "Gebrauch" "Gebrauch" "Gebrauchs" "Gebräuche" "Gebräuchen" masculine ;   
lin lead_V2V = mkV2V (mkV "irreführen") ; ---- delete: false extraction
lin lead_V2 = mkV2 (mkV "führen") ; 
lin lead_V = mkV "führen" ; 
lin stand_V2 = mkV2 (prefixV "aus" I.halten_V) ;
lin stand_V = L.stand_V ;
lin idea_N = mkN "Idee" | mkN "Ahnung" ; --- split: many creative ideas / no idea how this works
lin study_N = mkN "Studie" | mkN "Studium" "Studium" "Studium" "Studiums" "Studien" "Studien" ; -- split: a study showed / his study of French
lin lot_N = mkN "Grundstück" "Grundstück" "Grundstück" "Grundstücks" "Grundstücke" "Grundstücken"| mkN "Los" "Los" "Los" "Loses" "Lose" "Losen"; --- split: built on a lot / decided by lot
lin job_N = mkN "Job" "Jobs" masculine | mkN "Aufgabe" ; --- split: teacher job / your only job today is being friendly
lin since_Subj = ss "seit" ;
lin result_N = mkN "Ergebnis" "Ergebnis" "Ergebnis" "Ergebnisses" "Ergebnisse" "Ergebnissen" neuter ;
lin happen_VV = mkVV I.geschehen_V ; --- NOTE: better translation = zufällig geschehen
lin happen_V = mkV "passieren" "passiert" "passierte" "passiere" "passiert" | prefixV "statt" I.finden_V ; --- split: an accident happened / an event happened 
lin right_N = mkN "Recht" "Recht" "Recht" "Rechts" "Rechte" "Rechten" neuter ;
lin least_Adv = mkAdv "am wenigsten" ;
lin right_A = rechtwinklig_A ; --- delete: senses are split
lin right_2_A = mkA "recht" ;
lin right_1_A = mkA "richtig" ; 
lin almost_Adv = mkAdv "fast" ;
lin carry_V2 = mkV2 I.tragen_V ;
lin carry_V = I.tragen_V ; --- delete: false extraction
lin authority_N = mkN "Autorität" feminine ; --- delete: senses are split
lin authority_2_N = mkN "Autorität" feminine ;
lin authority_1_N = mkN "Kompetenz" feminine ;
lin long_Adv = mkAdv "lange" ; ---cat? can't think of example of use of long as Adv
lin early_A = mkA "früh" | mkA "verfrüht" ; --- split: early in the morning | a report sent in early
lin view_N = sicht_N | mkN "View" feminine ; --- delete: senses are split
lin view_2_N = mkN "Ansicht" feminine ; 
lin view_1_N = mkN "Aussicht" feminine | mkN "Ausblick" ; 
lin together_Adv = mkAdv "zusammen" ;
lin talk_V2 = mkV2 (mkV "reden") ; --- note: construction "talk politics" not possible; need PP: über Politik reden
lin talk_V = mkV "reden" | I.sprechen_V ;
lin report_N = mkN "Bericht" ;
lin after_Subj = ss "nachdem" ;
lin before_Subj = ss "bevor" ;
lin bit_N = mkN "Bit" neuter | mkN "Bisschen" "Bisschen" neuter | mkN "Stück" "Stück" "Stück" "Stückes" "Stücke" "Stücken" neuter | mkN "Stückchen" "Stückchen" neuter ; --- split: computational bit / a bit of luck / one bit of the puzzle (Stück / Stückchen)
lin face_N = mkN "Gesicht" neuter | mkN "Gesichtsausdruck" "Gesichtsausdruck" "Gesichtsausdruck" "Gesichtsausdrucks" "Gesichtsausdrücke" "Gesichtsausdrücken" masculine ; --- split: beautiful face / pull a face
lin sit_V2 = mkV2 I.sitzen_V ;
lin market_N = warenkorb_N ; --- delete: senses are split
lin market_1_N = mkN "Markt" "Markt" "Markt" "Markts" "Märkte" "Märkten" masculine ; 
lin market_2_N = mkN "Markt" "Markt" "Markt" "Markts" "Märkte" "Märkten" masculine ; ---note: stock market better translated to Börse
lin appear_VV = mkVV I.scheinen_V ;
lin appear_VS = mkVS I.scheinen_V ;
lin appear_VA = mkVA I.scheinen_V ; 
lin appear_V = mkV "erscheinen" "erscheint" "erschien" "erscheine" "erscheint" ;
lin continue_VV = mkVV (prefixV "weiter" (mkV "machen")) | mkVV (prefixV "fort" I.fahren_V) ;
lin continue_V2 = mkV2 (prefixV "weiter" (mkV "machen")) ;
lin continue_V = prefixV "weiter" (mkV "machen") ;
lin able_A = mkA "kompetent" | mkA "fähig" ; --- split: an able student / she is able to drive
lin later_Adv = mkAdv "später" ; 
lin hour_N = mkN "Stunde" ; 
lin rate_N = mkN "Tempo" "Tempo" "Tempo" "Tempos" "Tempi" "Tempi" | mkN "Kurs" | mkN "Verhältnis" "Verhältnis" "Verhältnis" "Verhältnisses" "Verhältnisse" "Verhältnissen" neuter ; --- split: at a fast rate / change rate / rate of two sides to each other
lin law_N = mkN "Ã¶ffentliche Ordnung" feminine ; --- delete: sense is split
lin law_2_N = mkN "Jura" "Jura" "Jura" "Juras" "Juras" "Juras" masculine ; --- note: NO plural!!!
lin law_1_N = mkN "Gesetz" "Gesetz" "Gesetz" "Gesetzes" "Gesetze" "Gesetzen" neuter ; 
lin court_N = hof_N | mkN "Hofstaat" masculine ;  --- delete: sense is split
lin court_2_N = mkN "Gerichtshof" "Gerichtshof" "Gerichtshof" "Gerichtshofes" "Gerichtshöfe" "Gerichtshöfen" masculine | mkN "Gericht" "Gericht" "Gericht" "Gerichts" "Gerichte" "Gerichten" ;
lin court_1_N = mkN "Hof" "Hof" "Hof" "Hofes" "Höfe" "Höfen" masculine ;
lin office_N = mkN "Amt" "Amt" "Amt" "Amts" "Ämter" "Ämtern" neuter | mkN "Büro" "Büros" neuter ; --- split: the president in office / the president's office
lin let_V2V = mkV2V I.lassen_V ; 
lin produce_V2 = mkV2 (mkV "produzieren" "produziert" "produzierte" "produziere" "produziert") | mkV2 (mkV "erzielen" "erzielt" "erzielte" "erziele" "erzielt"); --- split: produce cheese / produce results 
lin produce_V = mkV "produzieren" "produziert" "produzierte" "produziere" "produziert" ; --- false extraction
lin minister_N = minister_N | ministerin_N ; --- delete: sense is split
lin minister_2_N = mkN "Pfarrer" "Pfarrer" masculine ;
lin minister_1_N = mkN "Minister" "Minister" masculine ; 
lin subject_N = untertan_N | mkN "Untertanin" feminine ; --- delete: sense is split
lin subject_2_N = mkN "Subjekt" Subjekt" Subjekt" Subjekts" Subjekte" Subjekten" neuter | mkN "Thema" "Thema" "Thema" "Themas" "Themen" "Themen" neuter | mkN "Fach" "Fach" "Fach" "Fachs" "Fächer" "Fächern" neuter ; --- split further: subject and object / the subject of this talk / maths is my fav subject
lin subject_1_N = mkn "Gegenstand" "Gegenstand" "Gegenstand" "Gegenstands" "Gegenstände" "Gegenständen"; --- note: "subject matter" is not sufficiently clear for disambiguating meanings; interpreted as physical matter of a subject 
lin term_N = mkN "Semester" neuter | mkN "Ausdruck" "Ausdruck" "Ausdruck" "Ausdrucks" "Ausdrücke" "Ausdrücken" masculine | mkN "Bedingung" ; --- split: school term(no general term in German; semester/trimester has to be specified) / scientific term / terms and conditions
lin particular_A = mkA "bestimmt" | mkA "eigen" ; --- split: do you need any particular food | she is particular in what she eats
lin involve_VS = variants{} ; --- delete: false extraction
lin involve_V2 = mkV2 (prefixV "ein" (mkV "beziehen" "bezieht" "beziehte" "beziehe" "bezogen")) | mkV2 (mkV "bedingen" "bedingt" "bedingte" "bedinge" "bedingt") ; --- split: involve somebody | involve something
lin involve_V = prefixV "ein" (mkV "beziehen" "bezieht" "beziehte" "beziehe" "bezogen") ; --- delete: false extraction 
lin sort_N = mkN "Sorte" ; 
lin require_VS = mkVS (mkV "erfordern" "erfordert" "erforderte" "erfordere" "erfordert") ;  
lin require_V2V = mkV2V (mkV "erfordern" "erfordert" "erforderte" "erfordere" "erfordert") ; --- cat: it requires you to = es erfordert von dir... / es erfordert, dass du
lin require_V2 = mkV2 (mkV "erfordern" "erfordert" "erforderte" "erfordere" "erfordert") | mkV2 (no_geV (mkV "benötigen")) ; --- split: it requires a lot of energy / you require a lot of energy
lin require_V = erfordern_V ; --- delete: false extraction 
lin suggest_VS = mkVS (prefixV "vor" I.schlagen_V) ; 
lin suggest_V2 = mkV2 (prefixV "vor" I.schlagen_V) ; 
lin suggest_V = prefixV "vor" I.schlagen_V ; --- delete: false extraction
lin far_A = mkA "fern" | mkA "weit" ; --- split: near and far / a far distance 
lin towards_Prep = "auf ... zu" ; -- note: preposition around the noun
lin period_N = epoche_N | zeitraum_N ;  --- delete: sense is split
lin period_3_N = "Regel" "Regeln" feminine | mkN "Periode" ;
lin period_2_N = mkN "Punkt" ; 
lin period_1_N = mkN "Abschnitt" | mkN "Periode" ;
lin consider_VV = mkVV (mkV "überlegen" "überlegt" "überlegte" "überlege" "überlegt") ; --- cat: V2V in German: I'm considering leaving = ich überlege mir zu gehen
lin consider_VS = mkVS (mkV "überlegen") ; --- delete: false extraction
lin consider_V3 = mkV3 I.halten_V ; --- cat: I consider her a wise woman = ich halte sie FÜR eine weise Frau
lin consider_V2V = mkV2V (mkV "überlegen") ; --- delete: false extraction for English
lin consider_V2A = mkV2A (mkV "überlegen") ; --- delete: false extraction
lin consider_V2 = mkV2 (mkV "überlegen" "überlegt" "überlegte" "überlege" "überlegt") ; --- cat: I will consider it = ich überlege es MIR
lin consider_V = mkV "überlegen" ; --- delete: false extraction
lin read_VS = mkVS (I.lesen_V) ; 
lin read_V = I.lesen_V ; 
lin change_V2 = mkV2 (mkV "ändern") ;  
lin change_V = reflV (mkV "ändern") accusative ;  
lin mother_N = mkN "Mutter" "Mütter" feminine ; 
lin offer_VV = mkVV (prefixV "an" I.bieten_V) ; 
lin offer_V2 = mkV2 I.bieten_V ; 
lin voice_N = mkN "Stimme" ;  
lin both_Adv = mkAdv "beide" ;
lin once_Adv = mkAdv "einmal" ;    
lin police_N = mkN "Polizei" feminine ; 
lin kind_N = mkN "Art" feminine ; 
lin lose_V2 = L.lose_V2 ;
lin lose_V = I.verlieren_V ; 
lin add_VS = mkVS (prefixV "hinzu" (mkV "fügen")) ; 
lin add_V2 = mkV2 (prefixV "hinzu" (mkV "fügen")) | mkV2 (mkV "addieren" "addiert" "addierte" "addiere" "addiert"); --- split: I added her (on FB) / I added two numbers
lin add_V = mkV "addieren" "addiert" "addierte" "addiere" "addiert" ; --- delete: false extraction
lin expect_VV = mkVV (mkV "erwarten" "erwartet" "erwartete" "erwarte" "erwartet") ; 
lin expect_VS = mkVS (mkV "erwarten" "erwartet" "erwartete" "erwarte" "erwartet") ; 
lin expect_V2V = mkV2V (mkV "erwarten" "erwartet" "erwartete" "erwarte" "erwartet") ; --- cat: I expect her to go = Ich erwarte, dass sie gehen wird
lin expect_V2 = mkV2 (mkV "erwarten" "erwartet" "erwartete" "erwarte" "erwartet") ; 
lin expect_V = erwarten_V ; --- delete: false extraction (except for "I am expecting" - ich erwarte ein Kind)
lin ever_Adv = mkAdv "jemals" | mkAdv "je" ;  
lin available_A = mkA "verfügbar" ;  
lin price_N = mkN "Preis" ; 
lin little_A = mkA "wenig" | mkA "klein" ; --- split: a little money (is little a det here?) / a little girl 
lin action_N = mkN "Maßnahme" | mkN "Handlung" feminine ; --- split: take action against | acting a certain way
lin issue_N = variants{} ; --- delete: sense is split
lin issue_2_N = mkN "Ausgabe" ;
lin issue_1_N = mkN "Problem" "Probleme" neuter | mkN "Angelegenheit" feminine ; --- split further: this is no issue / the issue of whether ... 
lin remember_VS = mkVS (reflV (mkV "erinnern" "erinnert" "erinnerte" "erinnere" "erinnert") accusative) ; 
lin remember_V2 = mkV2 (reflV (mkV "erinnern" "erinnert" "erinnerte" "erinnere" "erinnert") accusative) | mkV2 (reflV (mkV "merken")) ; --- split: remember a person (note: in German "ich erinnere mich AN dich") / remember a fact
lin remember_V = reflV (mkV "erinnern" "erinnert" "erinnerte" "erinnere" "erinnert") accusative ; 
lin position_N = mkN "Stelle" | mkN "Lage" | mkN "Position" ; --- split: precise position is unknown / I'm in a bad position / a high position
lin cost_N = mkN "Kost Kosten" masculine ; --- note: only in plural
lin matter_N = materie_N ; --- delete: sense is split
lin matter_1_N = mkN "Material" "Material" "Material" "Materials" "Materiale" "Materialen" ; 
lin matter_2_N = mkN "Angelegenheit" feminine ;
lin community_N = mkN "Gemeinschaft" feminine ;
lin remain_VV = mkVV I.bleiben_V ; 
lin remain_VA = mkVA I.bleiben_V ;
lin remain_V2 = mkV2 I.bleiben_V ; --- delete: false extraction
lin remain_V = I.bleiben_V ;
lin figure_N = abbildung_N ; --- delete: sense is split
lin figure_2_N = mkN "Figur" feminine ;
lin figure_1_N = mkN "Figur" feminine ;
lin type_N = mkN "Typ" "Typ" "Typ" Typs" "Typen" "Typen" masculine | mkN "Art" feminine ; --- note: compounds such as type face not accounted for
lin research_N = mkN "Forschung" ;
lin education_N = mkN "Bildung" ;
lin fall_V = I.fallen_V | prefixV "hin" I.fallen_V ; --- split: the book fell / the girl fell
lin speak_V = I.sprechen_V ; 
lin few_N = mkN "Wenig" ; -- note: only in plural
lin open_V = reflV (mkV "öffnen") accusative ;
lin buy_V = mkV "kaufen" ;
lin programme_N = mkN "Programm" "Programm" "Programm" "Programms" "Programme" "Programme" neuter ;  
lin minute_N = mkN "Minute" ;
lin moment_N = mkN "Moment" ;
lin age_N = mkN "Alter" neuter | mkN "Zeitalter" neuter ; --- split: don't talk about age / the age of aquarius
lin centre_N = mkN "Zentrum" "Zentrum" "Zentrum" "Zentrums" "Zentren"  "Zentren" neuter ;
lin stop_VV = mkVV (prefixV "auf" (mkV "hören")) ;
lin stop_V2 = mkV2 (prefixV "an" I.halten) | mkV2 (mkV "stoppen") ;
lin control_N = mkN "Kontrolle" ;
lin value_N = mkN "Wert" ;
lin send_V2V = mkV2V (senden_1_V) | mkV2V (schicken_0_V) ; --- delete: false extraction, why no send_V3?
lin send_V2 = mkV2 (mkV "schicken") ;
lin send_V = senden_1_V | schicken_0_V ; --- delete: false extraction
lin health_N = mkN "Gesundheit" feminine ;
lin decide_VV = mkVV (reflV (mkV "entscheiden entscheidet entschied entscheide entschieden") accusative) | mkVV (mkV "beschließen" "beschließt" "beschloss" "beschlösse" "beschlossen") ;
lin decide_VS = mkVS (mkV "beschließen" "beschließt" "beschloss" "beschlösse" "beschlossen") ;
lin decide_V2 = mkV2 (mkV "entscheiden entscheidet entschied entscheide entschieden") ;
lin decide_V = reflV (mkV "entscheiden entscheidet entschied entscheide entschieden") accusative ;
lin main_A = mkA "Haupt-" ;
lin win_V = I.gewinnen_V ;
lin understand_VS = mkVS (mkV "verstehen" "versteht" "verstand" "verstünde" "verstanden") | mkVS (mkV "begreifen" "begreift" "begriff" "begriffe" "begriffen") ;
lin understand_V = mkV "verstehen" "versteht" "verstand" "verstünde" "verstanden" ;
lin decision_N = mkN "Entscheidung" ; 
lin develop_V2 = mkV2 (mkV "entwickeln" "entwickelt" "entwickelte" "entwickle" "entwickelt") ;
lin develop_V = reflV (mkV "entwickeln" "entwickelt" "entwickelte" "entwickle" "entwickelt") accusative ;
lin class_N = mkN "Klasse" | mkN "Schicht" feminine | mkN "Gesellschaftsschicht" feminine; --- split: class in school (Klasse) / working class 
lin receive_V2 = mkV2 (mkV "bekommen" "bekommt" "bekam" "bekäme" "bekommen") | mkV2 (mkV "erhalten" "erhaltet" "erhielt" "erhielte" "erhalten") | mkV2 (mkV "kriegen") ;
lin receive_V = mkV "bekommen" "bekommt" "bekam" "bekäme" "bekommen" ; --- delete: false extraction
lin return_V2 = mkV2 (prefixV "zurück" I.bringen_V) ;
lin return_V = mkV (prefixV "zurück" I.kommen_V) ; 
lin build_V2 = mkV2 (mkV "bauen") ; 
lin build_V = mkV "bauen" ; 
lin spend_V2 = mkV2 (prefixV "aus" I.geben_V) | mkV2 (fixprefixV "ver" I.bringen_V) ; --- split: spend time / money
lin spend_V = verbringen_V ; --- delete: false extraction
lin force_N = mkN "Gewalt" feminine | mkN "Streitmacht" "Streitmächte" feminine | mkN "Belastung" ; --- split: open it with force / the armys joined their forces / a lot of force is applying to that metal
lin condition_N = verfassung_N | kondition_N | mkN "Befinden" neuter | zustand_N ; --- delete: senses are split
lin condition_1_N = mkN "Bedingung" ;
lin condition_2_N = mkN "Zustand" "Zustand" "Zustand" "Zustands" "Zustände" "Zuständen" ; 
lin off_Prep = mkPrep "entfernt von" dative ; 
lin major_A = mkA "wichtig" ; 
lin describe_VS = mkVS (mkV "beschreiben" "beschreibt" "beschrieb" "beschriebe" "beschrieben") ; 
lin describe_V2 = mkV2 (mkV "beschreiben" "beschreibt" "beschrieb" "beschriebe" "beschrieben") ; 
lin agree_VV = reflV (compoundV "einverstanden" (fixprefixV "er" (mkV "klären"))) accusative ; 
lin agree_VS = mkVS (prefixV "zu" (mkV "stimmen")) ; 
lin agree_V = prefixV "zu" (mkV "stimmen")" ; 
lin economic_A = mkA "ökonomisch" | mkA "wirtschaftlich" ; 
lin increase_V2 = mkV2 (fixprefixV "er" (mkV "höhen")) ; 
lin increase_V = I.steigen_V ;
lin upon_Prep = mkPrep "auf" accusative | mkPrep "bei" dative ; --- note: really very strongly case dependent e.g. upon receipt = bei/nach Erhalt
lin learn_VV = mkVV (mkV "lernen") ; 
lin learn_VS = mkVS (mkV "lernen") | fixprefixV "er" I.fahren_V ; --- split: learnt that 1+1 = 2 / learnt that she had been unfaithful (found out!)
lin learn_V2 = L.learn_V2 ;
lin learn_V = mkV "lernen" ; --- delete: false extraction
lin general_A = mkA "allgemein" ;  
lin century_N = mkN "Jahrhundert" "Jahrhundert" "Jahrhundert" "Jahrhunderts" "Jahrhunderte" "Jahrhunderten" neuter ; 
lin section_N = mkN "Abschnitt" | mkN "Teil" "Teil" "Teil" "Teils" "Teile" "Teilen" ;
lin patient_N = mkN "Patient" "Patienten" masculine ; 
lin around_Adv = mkAdv "herum" ; 
lin activity_N = mkN "Aktivität" feminine | mkN "Tätigkeit" feminine ;
lin including_Prep = mkPrep "eingeschlossen" accusative ; --- note: postposition (mich eingeschlossen)
lin reach_V2 = mkV2 (fixprefixV "er" (mkV "reichen")) ; 
lin reach_V = mkV "reichen" ; 
lin real_A = mkA "echt" ;
lin lie_VS = mkVS (I.lügen_V) ;
lin lie_2_V = I.lügen_V ; 
lin lie_1_V = I.liegen_V ;
lin mind_N = mkN "Verstand" masculine | mkN "Geist" masculine ;
lin likely_A = mkA "wahrscheinlich" ;
lin among_Prep = mkPrep "unter" accusative ; 
lin team_N = mkN "Mannschaft" feminine | mkN "Team" "Team" "Team" "Teams" "Teams" "Teams" ; --- split: football team / team meeting
lin experience_N = mkN "Erfahrung" | mkN "Erlebnis" "Erlebnis" "Erlebnis" "Erlebnisses" "Erlebnisse" "Erlebnissen" ; --- split: from my experience / exciting experience
lin death_N = mkN "Tod" ;
lin soon_Adv = mkAdv "bald" ;
lin act_N = mkN "Handlung" | mkN "Tat" feminine ;
lin sense_N = mkN "Sinn" | mkN "Gefühl" "Gefühl" "Gefühl" "Gefühls" "Gefühle" "Gefühlen" neuter ; --- split: seventh sense | no sense of personal space
lin staff_N = mkN "Personal" "Personal" "Personal" "Personals" "Personale" "Personalen" neuter ; --- delete: sense is split
lin staff_2_N = mkN "Stock" "Stock" "Stock" "Stocks" "Stöcke" "Stöcken" masculine ; 
lin staff_1_N = mkN "Personal" "Personal" "Personal" "Personals" "Personale" "Personalen" neuter ;
lin certain_A = mkA "sicher" ; --- delete: sense is split
lin certain_2_A = mkA "bestimmt" ; 
lin certain_1_A = mkA "sicher" ;  
lin half_Predet = mkPredet "halb" ; --- cat: half a dollar = ein halber Dollar
lin half_Predet = mkPredet "halb" ; --- delete: double 
lin around_Prep = mkPrep "rund um" Acc | mkPrep "um ... herum" ; --- split: around the clock / around Vienna, note: preposition "um herum" around the noun
lin walk_V2 = mkV2 I.gehen_V ; --- cat: I walked the dog = mit dem Hund Gassi gehen
lin special_A = mkA "besondere" ;
lin difficult_A = mkA "schwer" | mkA "schwierig" ;
lin particularly_Adv = mkAdv "besonders" ;
lin department_N = mkN "Abteilung" ;
lin management_N = mkN "Leitung" | mkN "Führung" | mkN "Management" "Managements" neuter ;
lin morning_N = mkN "Morgen" ;
lin draw_V2 = mkV2 (junkV (mkV "Aufmerksamkeit") "anziehen") ; --- delete: sense is split
lin draw_1_V2 = mkV2 I.ziehen_V ; 
lin draw_2_V2 = mkV2 (mkV "zeichnen") ;
lin draw_V = mkV "zeichnen" ; 
lin hope_VV = mkVV (mkV "hoffen") ; 
lin hope_V = mkV "hoffen" ; 
lin across_Prep = mkAdv "über" | mkAdv "darüber" ; 
lin plan_N = mkN "Plan" "Plan" "Plan" "Plans" "Pläne" "Plänen" masculine ;
lin product_N = mkN "Produkt" "Produkt" "Produkt" "Produkts" "Produkte" "Produkten" neuter ;
lin committee_N = mkN "Ausschuss" "Ausschuss" "Ausschuss" "Ausschusses" "Ausschüsse" "Ausschüssen" masculine ;
lin ground_N = hintergrund_N ; --- delete: sense is split
lin ground_2_N = mkN "Grund" "Grund" "Grund" "Grundes" "Gründe" "Gründen" ; 
lin ground_1_N = mkN "Ebene" ; --- note: ground zero not sufficiently clear disambiguation
lin letter_N = briefbombe_N ; --- delete: sense is split
lin letter_2_N = mkN "Buchstabe" masculine ; 
lin letter_1_N = mkN "Brief" ;
lin create_V2 = mkV2 (fixprefixV "er" I.schaffen_V) ; 
lin create_V = entwerfen_V ; --- delete: false extraction
lin evidence_N = mkN "Beweismittel" feminine | indiz_N ; --- delete: sense is split
lin evidence_2_N = variants{} ; --- the evidence of his opinion? - meaning not clear to me
lin evidence_1_N = mkN "Beweis" ;
lin clear_A = mkA "klar" ; --- split: a clear lake / a clear yes (same in German)
lin game_N = spiel_N ; --- delete: sense is split
lin game_3_N = mkN "Wild" "Wild" "Wild" "Wilds" "Wild" "Wild" neuter ; --- note: no plural
lin game_2_N = mkN "Spiel" "Spiele" neuter ; 
lin game_1_N = mkN "Spiel" "Spiele" neuter ; 
lin food_N = mkN "Essen" neuter | mkN "Lebensmittel" feminine ; --- split: this was good food / shop food
lin role_N = rolle_N ; --- delete: sense is split
lin role_2_N = variants{} ; -- ?? (not disambiguated)
lin role_1_N = variants{} ; -- ?? (not disambiguated)
lin practice_N = mkN "Methode" / mkN "Übung" ; --- split: best practice examples / my daily practice
lin else_Adv = mkAdv "sonst" ;
lin support_N = mkN "Unterstützung" feminine ;
lin sell_V2 = mkV2 (fixprefixV "ver" (mkV "kaufen")) ; 
lin sell_V = fixprefixV "ver" (mkV "kaufen") ; 
lin event_N = mkN "Ereignis" "Ereignis" "Ereignis" "Ereignisses" "Ereignisse" "Ereignissen" | mkN "Event" "Events" neuter ; --- split: most significant event of 21st century / big clubbing event
lin building_N = mkN "Bau" | mkN "Bauen" neuter | mkN "Gebäude" "Gebäude" "Gebäude" "Gebäudes" "Gebäude" "Gebäuden" neuter ; --- split: the building of the new arcade (Bau / Bauen) | this beautiful building
lin range_N = mkN "Reichweite" | mkN "Umfang" "Umfang" "Umfang" "Umfangs" "Umfänge" "Umfängen"  ; 
lin report_VS = mkVS (fixprefixV "be" (mkV "richten")) ; 
lin report_V2 = mkV2 (mkV "melden") ;
lin report_V = fixprefixV "be" (mkV "richten") ; 
lin pass_V = prefixV "vorbei" I.gehen_V ; 
lin stage_N = mkN "Bühne" | mkN "Phase" ; --- split: all the world's a stage | at this stage of the cancer 
lin meeting_N = mkN "Meeting" "Meetings" neuter | mkN "Treffen" neuter ; --- split: office meeting / meeting among friends
lin meeting_N = treffen_N ; --- delete: double
lin thus_Adv = mkAdv "also" | mkAdv "demnach" ;
lin accept_VS = mkVS (mkV "akzeptieren" "akzeptiert" "akzeptierte" "akzeptiere" "akzeptierten") ; 
lin accept_V2 = mkV2 (prefixV "zu" (mkV "sagen")) | mkV2 (prefixV "an" I.nehmen_V) | mkV2 ((mkV "akzeptieren" "akzeptiert" "akzeptierte" "akzeptiere" "akzeptierten")) ; --- split: Cambridge accepted me (mir zusagen/mich annehmen)/ I accept your opionion but I don't agree
lin accept_V = mkV2 (prefixV "zu" (mkV "sagen")) | mkV2 (prefixV "an" I.nehmen_V) | mkV2 ((mkV "akzeptieren" "akzeptiert" "akzeptierte" "akzeptiere" "akzeptierten")) ; --- split: cf. above + cat: I accepted = ich habe ES angenommen / akzeptiert
lin town_N = mkN "Stadt" "Städte" feminine ;
lin further_Adv = mkAdv "des Weiteren" ;
lin club_N = klub_N | verein_N ; --- delete: sense is split
lin club_2_N = mkN "Keule" ; 
lin club_1_N = mkN "Verein" | mkN "Klub" "Klubs" masculine | mkN "Klub" "Klubs" masculine ; --- split further: member of the club (Verein/Klub) / go partying to a club (Klub/Club)
lin cause_V2V = mkV2V (mkV "veranlassen" "veranlasst" "veranlasste" "veranlasse" "veranlasst") ; 
lin cause_V2 = mkV2 (mkV "verursachen" "verursacht" "verursachte" "verursache" "verursacht") ; 
lin arm_N = mkN "Arm" ; --- delete: sense is split
lin arm_1_N = mkN "Arm" ;
lin arm_2_N = mkN "Waffe" ;
lin history_N = mkN "Geschichte" ; 
lin parent_N = mkN "Elternteil" "Elternteil" "Elternteil" "Elternteil" "Eltern" "Eltern" neuter | mkN "Vorgänger" ;  --- split: parent of children / the parent model
lin land_N = mkN "Land" "Land" "Land" "Landes" "Länder" "Ländern" neuter ;
lin trade_N = mkN "Handel" | mkN "Gewerbe" "Gewerbe" "Gewerbe" "Gewerbes" "Gewerbe" "Gewerben" neuter ; --- split: domestic trade (only sg in German) / specific to my trade 
lin watch_VS = mkVS (prefixV "auf" (mkV "passen")) ; 
lin watch_V2V = mkV2V (mkV "beobachten" "beobachtet" "beobachtete" "beobachte" "beobachtet") ; 
lin watch_V2 = L.watch_V2 ; --- delete: sense is split
lin watch_1_V2 = mkV2 (mkV "schauen") ;
lin watch_2_V2 = mkV2 (mkV "beobachten" "beobachtet" "beobachtete" "beobachte" "beobachtet") ; --- maybe further split: can you watch my things? 
lin watch_V = prefix "zu" (mkV "schauen") ; 
lin situation_N = mkN "Situation" ; 
lin ago_Adv = mkAdv "her" ; 
lin teacher_N = L.teacher_N ;
lin record_N = mkN "Hitparade" ; --- delete: sense is split
lin record_3_N = mkN "Aufzeichnung" ; 
lin record_2_N = mkN "Platte" | mkN "Schallplatte" ; 
lin record_1_N = mkN "Rekord" ; 
lin manager_N = mkN "Direktor" "Direktoren" masculine | mkN "Manager" ;  
lin relation_N = mkN "Beziehung" ; 
lin common_A = mkA "gewöhnlich" ; --- delete: sense is split
lin common_2_A = mkA "gemeinsam" ;
lin common_1_A = mkA "üblich" | mkA "gewöhnlich" ; --- split further: very common | the common domestic fowl 
lin strong_A = mkA "stark" "stärker" "stärkste" ; 
lin whole_A = mkA "ganz" ; 
lin field_N = feld_N | gebiet_N | bereich_N ; --- delete: sense is split
lin field_4_N = mkN "Feld" neuter ;
lin field_3_N = mkN "Platz" "Plätze" masculine ;
lin field_2_N = mkN "Feld" neuter ; 
lin field_1_N = mkN "Feld" neuter ; 
lin free_A = mkA "frei" ;  
lin break_V2 = L.break_V2 ;
lin break_V = I.brechen_V ; 
lin yesterday_Adv = gestern_Adv ; 
lin support_V2 = mkV2 (fixprefixV "unter" (mkV "stützen")) ; 
lin window_N = L.window_N ;
lin account_N = mkN "Konto" "Konto" "Konto" "Kontos" "Konten" "Konten" | mkN "Bericht" ; --- split: bank account | his account of last night was dramatic
lin explain_VS = mkVS (fixprefixV "er" (mkV "klären")) ; 
lin explain_V2 = mkV2 (fixprefixV "er" (mkV "klären")) ; 
lin stay_VA = mkVA I.bleiben_V ; 
lin stay_V = I.bleiben_V ; 
lin wait_VV = mkVV (warten_8_V) ; --- delete: false extraction
lin wait_V2 = L.wait_V2 ;
lin wait_V = mkV "warten" ; 
lin usually_Adv = mkAdv "normalerweise" ; 
lin difference_N = mkN "Unterschied" ; 
lin material_N = mkN "Stoff" ; mkN "Material" "Material" "Material" "Materials" "Materiale" "Materialen" --- split: material covered in class (sg only) | expensive material
lin air_N = mkN "Luft" "Lüfte" feminine ; 
lin wife_N = L.wife_N ;
lin cover_V2 = mkV2 (mkV "decken") ;   
lin apply_VV = mkVV (anwenden_V) | mkVV (verwenden_V) | mkVV (benutzen_V) ; --- delete: false extraction
lin apply_V2V = mkV2V (anwenden_V) | mkV2V (verwenden_V) | mkV2V (benutzen_V) ; --- delete: false extraction
lin apply_V2 = mkV2 (anwenden_V) | mkV2 (verwenden_V) | mkV2 (benutzen_V) ; --- delete: sense is split
lin apply_1_V2 = mkV2 (prefixV "an" I.wenden_V) | mkV2 (prefixV "auf" I.tragen_V) ; --- split further: we apply the newest methods | apply some cream
lin apply_2_V2 = mkV2 (reflV (mkV "bewerben") accusative) ; --- note: not technically V2 but V ? apply FOR a job, not apply a job
lin apply_V = reflV (mkV "bewerben") accusative ;   
lin project_N = mkN "Projekt" "Projekte" neuter ; 
lin raise_V2 = mkV2 (fixprefixV "er" (mkV "höhen")) ; 
lin sale_N = mkN "Verkauf" "Verkäufe" masculine | mkN "Ausverkauf" "Ausverkäufe" masculine ; --- split: sale of an apartment | end of year sales
lin relationship_N = mkN "Beziehung" ;  
lin indeed_Adv = mkAdv "allerdings" ; 
lin light_N = mkN "Licht" neuter ;  
lin claim_VS = mkVS (fixprefixV "be" (mkV "haupten")) ; 
lin claim_V2 = mkV2 (mkV "fordern") ; 
lin claim_V = mkV "fordern" ; --- delete: false extraction
lin form_V2 = mkV2 (mkV "formen") | mkV2 (mkV "bilden") ; --- form clay (to a ball) / form a circle
lin form_V = formen_8_V | bilden_6_V ; --- delete: false extraction
lin base_V2 = mkV2 (basieren_V) ; --- delete: false extraction
lin base_V = mkV "basieren" ; 
lin care_N = mkN "Pflege" | mkN "Sorgfalt" ; --- split: old people in care / carefully 
lin someone_NP = S.somebody_NP ;
lin everything_NP = S.everything_NP ;
lin certainly_Adv = mkAdv "bestimmt" | mkAdv "sicherlich" ;  
lin rule_N = L.rule_N ;
lin home_Adv = mkAdv "heim" | mkAdv "nach Hause" ;   
lin cut_V2 = L.cut_V2 ;
lin cut_V = I.schneiden_V ; --- delete: false extraction
lin grow_VA = I.werden_V ;  
lin grow_V2 = mkV2 (I.wachsen_V) ;  
lin grow_V = I.wachsen_V ;  
lin similar_A = mkA "ähnlich" ;  
lin story_N = mkN "Geschichte" ;  
lin quality_N = mkN "Qualität" feminine | mkN "Eigenschaft" feminine ; --- split: high quality / his best quality
lin tax_N = mkN "Steuer" "Steuern" feminine ; 
lin worker_N = mkN "Arbeiter" ; 
lin nature_N = mkN "Natur" feminine ; 
lin structure_N = mkN "Struktur" feminine ; 
lin data_N = mkN "Data Data Data Data Daten Daten" neuter ; --- note: only plural
lin necessary_A = mkA "notwendig" ;  
lin pound_N = mkN "Pfund" "Pfunde" neuter ; 
lin method_N = mkN "Methode" ;  
lin unit_N = einheit_N ; --- delete: sense is split
lin unit_6_N = variants{} ; -- no sense disambiguation given
lin unit_5_N = variants{} ; -- no sense disambiguation given
lin unit_4_N = variants{} ; -- no sense disambiguation given
lin unit_3_N = variants{} ; -- no sense disambiguation given
lin unit_2_N = variants{} ; -- no sense disambiguation given
lin unit_1_N = variants{} ; -- no sense disambiguation given
lin central_A = zentral_A ;
lin bed_N = mkN "Bett" "Bett" "Bett" "Betts" "Betten" "Betten" neuter ;
lin union_N = mkN "Bund" "Bünde" masculine | mkN "Gewerkschaft" feminine ; --- split: sacred union of marriage / worker's union  
lin movement_N = mkN "Bewegung" ; 
lin board_N = mkN "Kost und Logis" ; --- delete: sense is split
lin board_2_N = mkN "Kammer" "Kammern" feminine ;
lin board_1_N = mkN "Tafel" "Tafeln" feminine ;
lin true_A = mkA "wahr" ; 
lin well_Interj = mkInterj "also" ; 
lin contain_V2 = mkV2 (fixprefixV "ent" I.halten_V) ; 
lin open_A = mkA "offen" ;
lin personal_A = mkA "persönlich" | mkA "privat" ; --- split: my personal mission / this is a very personal issue
lin detail_N = mkN "Detail" "Details" neuter ;
lin model_N = mkN "Model" "Models" neuter | mkN "Modell" "Modelle" neuter ; --- fashion model / newest car model 
lin bear_V2 = mkV2 I.tragen_V | mkV2 (fixprefixV "er" I.tragen_V) ; --- split: bear a heavy weight / bear pain 
lin bear_V = tragen_7_V ; --- delete: false extraction
lin single_A = einkettig_A ; --- delete: sense is split
lin single_2_A = mkA "alleinstehend" ; 
lin single_1_A = mkA "einzeln" ;
lin join_V2 = mkV2 (prefixV "bei" I.treten_V) ; 
lin join_V = prefixV "bei" I.treten_V ; 
lin reduce_V2 = mkV2 (mkV "reduzieren") | mkV2 (fixprefixV "ver" (mkV "ringern")) ;  
lin reduce_V = reflV (fixprefixV "ver" (mkV "ringern")) accusative ;  
lin establish_V2 = mkV2 (mkV "etablieren") ; 
lin wall_N = mkN "Mauer" "Mauern" feminine ;
lin face_V2 = mkV2 (fixprefixV "gegenüber" I.stehen_V) ; --- note: let's face it - worth a separate meaning? very specific English phrase
lin face_V = stellen_4_V ; --- delete: false extraction
lin hospital_N = mkN "Krankenhaus" "Krankenhäuser" neuter ;
lin chapter_N = mkN "Kapitel" neuter ;
lin scheme_N = mkN "Plan" "Pläne" masculine ;
lin theory_N = mkN "Theorie" ; -- 
lin choose_VV = mkVV (fixprefixV "ent" I.scheiden_V) ; 
lin choose_V2 = mkV2 (mkV "wählen") ; 
lin wish_VV = mkVV (reflV (mkV "wünschen") dative) ; 
lin wish_V2V = mkV2V (mkV "wünschen") ; --- delete: false extraction
lin wish_V2 = mkV2 (reflV (mkV "wünschen") dative) ; 
lin property_N = eigenschaft_N ; --- delete: sense is split
lin property_2_N = mkN "Eigenschaft" feminine ; -- 
lin property_1_N = mkN "Grundstück" neuter | mkN "Besitz" ; --- split further: a large property / this is currently in my property
lin achieve_V2 = mkV2 (fixprefixV "er" (mkV "reichen")) ;  
lin poor_A = arm_A ; --- delete: sense is split 
lin poor_3_A = mkA "schlecht" ;  
lin poor_2_A = mkA "arm" "ärmer" "ärmste" ; 
lin poor_1_A = mkA "arm" "ärmer" "ärmste" ; 
lin officer_N = offizier_N ; --- delete: sense is split
lin officer_3_N = mkN "Beamte" "Beamten" masculine ;
lin officer_2_N = mkN "Offizier" "Offiziere" masculine ;
lin officer_1_N = mkN "Chef" "Chefs" masculine | mkN "Vorstand" "Vorstände" masculine  ;
lin up_Prep = mkPrep "hinauf" ; --- note: postposition "I walked up the mountain" = "ich ging den Berg hinauf"
lin charge_N = entgelt_N ; --- delete: sense is split 
lin charge_2_N = mkN "Anklage" | mkN "Gebühr" feminine ; --- split further: charge against him | high charges of the phone company
lin charge_1_N = mkN "Ladung" ;
lin director_N = Direktor" "Direktoren" masculine | mkN "Regisseur" ; --- split: director of the company / director of the movie 
}
